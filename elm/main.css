@charset "UTF-8";
* {
    box-sizing: border-box;
}

html, body {
    height: 100%;
    width: 100%;
}

body {
    overflow: hidden;
    display: flex;
    flex-direction: column;
    font-family: monospace;
}

header {
    width: 100%;
    background: black;
    color: grey;
    text-align: center;
}

header > h1 {
    margin: 0.1em;
}

main {
    --horizontal-spacing: 1em;
    --padding: 10px;
    background: white;
    flex: 1 0;
    display: flex;
    padding: calc(var(--horizontal-spacing) / 2);
    overflow: hidden;
}

main > * {
    background: black;
    flex: 3 0 auto;
    margin: calc(var(--horizontal-spacing) / 2);
    overflow: hidden;
}

button {
    border: 3px solid grey;
    background: white;
    color: grey;
    font: inherit;
}

button:not([disabled]) {
    color: black;
}

button:not([disabled]):hover {
    background-color: black;
    color: grey;
    cursor: pointer;
}

.interaction-panel {
    --panel-width: 20em;
    flex: 0 0 var(--panel-width);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: calc(var(--padding) / 2);
}

.interaction-panel > * {
    margin: calc(var(--padding) / 2);
    overflow: hidden;
}

.interaction-control {
    flex: 0 0 auto;
    display: flex;
    justify-content: space-between;
    overflow: hidden;
}

.interaction-control > button {
    flex: 0 1;
    position: relative;
    font-size: 2em;
}

.interaction-instructions {
    flex: 1 1 15em;
    overflow-y: auto;
    overflow-x: hidden;
}

.interaction-instructions h1 {
    color: white;
    font-size: 1.3em;
    margin-top: 0;
}

.interaction-instructions p {
    background: white;
    padding: 0.6em 0.3em;
}

.interaction-interface {
    --side-length: calc(var(--panel-width) - 2 * var(--padding));
    flex: 0 0 var(--side-length);
    width: calc(var(--panel-width) - 2 * var(--padding));
    margin-left: auto;
    margin-right: auto;
    background: white;
}

.interaction-interface .image-pick {
    --outline-inset: 20px;
    position: relative;
    width: 100%;
    height: 100%;
    outline: 2px dashed #92b0b3;
    outline-offset: calc(0px - var(--outline-inset));
    transition: outline-offset 0.15s ease-in-out, background-color 0.15s linear;
    padding: calc(var(--outline-inset) + 0.5em);
    text-align: center;
}

.interaction-interface .image-pick.is-dragover {
    outline-offset: -20px;
    outline-color: #c8dadf;
    background-color: #fff;
}

.interaction-interface .image-pick .icon {
    width: 100%;
    height: 7em;
    margin-bottom: 2.5em;
    fill: #92b0b3;
}

.interaction-interface .image-pick input[type="file"] {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
    font-weight: 700;
    color: #e5edf1;
    background-color: #39bfd3;
    display: none;
    padding: 8px 16px;
    margin: 40px auto 0;
}

.interaction-interface .image-pick input[type="file"] + label {
    max-width: 80%;
    text-overflow: ellipsis;
    cursor: pointer;
    display: inline-block;
}

.interaction-interface .image-pick input[type="file"] + label:hover strong, .interaction-interface .image-pick input[type="file"]:focus + label strong, .interaction-interface .image-pick input[type="file"]:focus + label, .interaction-interface .image-pick input[type="file"]:hover, .interaction-interface .image-pick input[type="file"]:focus {
    background-color: #0f3c4b;
}

@keyframes appear-from-inside {
    from {
        transform: translateY(-50%) scale(0);
    }
    75% {
        transform: translateY(-50%) scale(1.1);
    }
    to {
        transform: translateY(-50%) scale(1);
    }
}

.display-panel {
    --show-stage: 0;
    --stages-to-show-at-a-time: 2;
    --position-of-selected-stage: 0.5;
    --arrow-size: 20px;
    --padding-between-stages: calc(var(--padding) * 1.1);
    --spacing-between-stages: calc(var(--arrow-size) + 2 * var(--padding-between-stages));
    transform: translateY(calc(-1 / var(--stages-to-show-at-a-time) * (100% - 2 * var(--padding) + var(--spacing-between-stages)) * (var(--show-stage) - var(--position-of-selected-stage))));
    transition: transform 0.5s linear;
    display: flex;
    flex-direction: column;
    padding: var(--padding);
    height: 100%;
    overflow: visible;
}

.display-panel > .current-stage {
    background-color: #ddd;
}

.display-panel > * {
    --height: calc((100% + var(--spacing-between-stages)) / var(--stages-to-show-at-a-time));
    flex: 0 0 var(--height);
    transition-property: flex-basis;
    transition-duration: inherit;
    transition-timing-function: inherit;
    pointer-events: none;
    font-size: 2em;
    max-height: var(--height);
    position: relative;
    width: 100%;
    background: grey content-box;
    overflow: visible;
}

.display-panel > * > * {
    margin: 1em auto;
    display: block;
}

.display-panel > *:not(:last-child) {
    --border-width: 2px;
    border: 0px solid transparent;
    border-bottom-width: var(--spacing-between-stages);
}

.display-panel > *:not(:last-child):after {
    border: var(--border-width) solid grey;
    background: white;
    color: grey;
    font: inherit;
}

.display-panel > *:not(:last-child):not([disabled]):after {
    color: black;
}

.display-panel > *:not(:last-child):not([disabled]):hover:after {
    background-color: black;
    color: grey;
    cursor: pointer;
}

.display-panel > *:not(:last-child):not([disabled]):after {
    pointer-events: auto;
}

.display-panel > *:not(:last-child):after {
    position: absolute;
    box-sizing: content-box;
    top: calc(100% + var(--padding-between-stages) - var(--border-width));
    left: calc(50% - var(--arrow-size) / 2);
    display: block;
    width: var(--arrow-size);
    height: var(--arrow-size);
    font-size: var(--arrow-size);
    line-height: var(--arrow-size);
    text-align: center;
    content: "â¯†";
}

.display-panel .image-number {
    font-size: 0.35em;
    line-height: 0.8em;
    font-weight: bold;
    text-align: center;
    white-space: pre;
}

.show-only-selected > *:not(.current-stage) {
    display: none;
}
